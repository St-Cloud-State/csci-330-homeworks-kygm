Script started on 2025-01-29 01:14:08+00:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="71" LINES="18"]
[0;32m@kygm [0mâžœ [1;34m/workspaces/csci-330-homeworks-kygm/Hwork2 [0;36m([1;31mmain[0;36m) [0m$ sbcl
This is SBCL 1.4.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.
* ( (not (equal 3 (abs -3)))

NIL
* (/ (+ 8 12 )2)

10
* (+(  (* 3 3)(* 4   4 4))

25
* a QUOTE     (quote questions_3.7  3 7_3`0  10_ )

QUESTIONS_37_310
* (defun MILES-PER-GALLON (in  INITIAL-DO  ODOMETER-RED  EADING FINAL-D ODOMETER-READING GALLONS-CONSUMED)
	(/ (- FIN NAL-ODOMETER-READING INITIAL-ODOMETER-READING) GALLONS-CONSUMED))

MILES-PER-GALLON
* (third '(the que ick brown fox))

BROWN
* (quote        (list '2 and 2 is 3 4))

debugger invoked on a UNBOUND-VARIABLE in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The variable AND is unbound.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

(SB-INT:SIMPLE-EVAL-IN-LEXENV AND #<NULL-LEXENV>)
0] abort

* 
debugger invoked on a SB-INT:SIMPLE-READER-ERROR in thread
#<THREAD "main thread" RUNNING {9461061}>:
  unmatched close parenthesis

    Stream: #<SYNONYM-STREAM :SYMBOL SB-SYS:*STDIN* {91051F1}>

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

(SB-IMPL::READ-RIGHT-PAREN #<SYNONYM-STREAM :SYMBOL SB-SYS:*STDIN* {91051F1}> #<unused argument>)
0] abort

* (list '2 (2 and 2 is 4                '(2 and 2 is 4))

((2 AND 2 IS 4))
* quote       (quite   ote (   typing_mistake_on_my_end_ )

TYPING_MISTAKE_ON_MY_END
* q (+1  1 (length (list t t t )))

4
* (cons 'patrick '(seymour marvin))

(PATRICK SEYMOUR MARVIN)
* (cons 'patrick (list 'seymour 'marvin))

(PATRICK SEYMOUR MARVIN)
* (quote 3.20   _  3 question_320)

QUESTION_320
* ( (defun mystery (x)
	(list (secocnd x     nd    cond x) (first x)))

MYSTERY
* (mystery '(dancing bear))

(BEAR DANCING)
* (mystery 'dancing 'bear)

debugger invoked on a SB-INT:SIMPLE-PROGRAM-ERROR in thread
#<THREAD "main thread" RUNNING {9461061}>:
  invalid number of arguments: 2

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

(MYSTERY DANCING BEAR) [external]
   source: (SB-INT:NAMED-LAMBDA MYSTERY
               (X)
             (BLOCK MYSTERY (LIST (SECOND X) (FIRST X))))
0] abort

* (mystery 'dancin                (mystery '(zoe wie))

(NIL ZOWIE)
* (mys stery (list 'first 'second))

(SECOND FIRST)
* (quoteqtds     e 3_21    question_321)

QUESTION_321
* (defun speak            quote       (quite   ote x   in_pdf_doc_ )

IN_PDF_DOC
* (quote 3.2  25   question_325)

QUESTION_325
* (list 'cons t nil)

(CONS T NIL)
* (eval (list 'cons t nil))

(T)
* (eval (eval (list 'cons tn    nil)))
; in: T
;     (T)
; 
; caught WARNING:
;   The function T is undefined, and its name is reserved by ANSI CL so that even
;   if it were defined later, the code doing so would not be portable.
; 
; compilation unit finished
;   Undefined function:
;     T
;   caught 1 WARNING condition

debugger invoked on a UNDEFINED-FUNCTION in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The function COMMON-LISP:T is undefined.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

("undefined function")
0] abort

* (apply #'cons '(t nil))

(T)
* (eval nil)

NIL
* (list 'eval nil)

(EVAL NIL)
* (eval (list 'eval nil))

NIL
* sb  (sb-ext:exit)
[0;32m@kygm [0mâžœ [1;34m/workspaces/csci-330-homeworks-kygm/Hwork2 [0;36m([1;31mmain[0;36m) [0m$ exit
exit

Script done on 2025-01-29 01:28:10+00:00 [COMMAND_EXIT_CODE="0"]
